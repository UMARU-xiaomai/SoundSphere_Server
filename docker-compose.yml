version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NPM_REGISTRY: "https://registry.npmmirror.com/"
    volumes:
      - "./frontend/src:/usr/share/nginx/html/src"
      - "./frontend/public:/usr/share/nginx/html"
    ports:
      - "8080:80"
    depends_on:
      - backend
    environment:
      NODE_ENV: "development"
      API_URL: "http://backend:3000/api"
      DEV_MODE: "1"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
      args:
        NPM_REGISTRY: "https://registry.npmmirror.com/"
    volumes:
      - "./backend:/usr/src/app"
      - "/usr/src/app/node_modules"
      - "./uploads:/usr/src/app/uploads"
    working_dir: "/usr/src/app"
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      NODE_ENV: "development"
      PORT: "3000"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_DATABASE: "soundsphere"
      JWT_SECRET: "soundsphere_jwt_secret_key"
      JWT_EXPIRES_IN: "7d"
      UPLOAD_DIR: "/usr/src/app/uploads"
    command: "npm run start:dev"
    restart: unless-stopped

  postgres:
    image: "postgres:13-alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "soundsphere"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    restart: unless-stopped

volumes:
  postgres_data: {}